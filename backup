import Footer from "../components/Footer";
import NavBarAfterLogin from "../components/NavBarAfterLogin";
import Navbar from "../components/Navbar";
import { useSelector } from "react-redux";
import ProfileCard from "../components/ProfileCard";
import { Link } from "react-router-dom";
import React, { useEffect } from "react";
import http from "../helpers/http";
import { Formik, Form, Field } from "formik";
import * as Yup from "yup";
import YupPassword from "yup-password";

YupPassword(Yup);

const UpdateDataSchema = Yup.object().shape({
  firstName: Yup.string().required("Required"),
  lastName: Yup.string().required("Required"),
  email: Yup.string().email("Invalid email").required("Required"),
  phoneNumber: Yup.string()
    .required("required")
    .matches(/^[0-9]+$/, "Phone Number must be only number")
    .min(10, "Minimal 10 number")
    .max(13, "Max 13 number"),
});

const ProfilePage = () => {
  const [profile, setProfile] = React.useState({});
  const [newFirstName, setNewFirstName] = React.useState("");

  const token = useSelector((state) => state.auth.token);
  const fetchProfile = async () => {
    try {
      const response = await http(token).get("/profile");
      setNewFirstName(response?.data?.results?.firstName);
      setProfile(response?.data?.results);
    } catch (error) {
      if (error) console.log(error);
    }
  };
  useEffect(() => {
    if (token) {
      fetchProfile();
    }
  }, [token]);

  //Handle Update Data

  const handleUpdateData = async (value) => {
    try {
      const firstName = value.firstName;
      const lastName = value.lastName;
      const email = value.email;
      const phoneNumber = value.phoneNumber;
      const response = await http(token).patch("/profile/updated", {
        firstName,
        lastName,
        email,
        phoneNumber,
      });
      return response;
    } catch (error) {
      console.log(error);
    }
  };

  console.log(newFirstName);

  return (
    <>
      {token ? <NavBarAfterLogin /> : <Navbar />}
      <div className="bg-[#F5D5AE] md:hidden block">
        <div className="flex justify-between p-5 rounded-b-2xl bg-white">
          <div className="border-b-4 border-[#C539B4] pb-2">
            <Link to="/Profile" className="font-bold text-lg">
              Details Account
            </Link>
          </div>
          <div>
            <Link to="/History" className="text-xl text-[#AAAAAA] font-bold">
              Order History
            </Link>
          </div>
        </div>
      </div>

      <div className="bg-[#F2DEBA] lg:p-20 p-5">
        <div className="flex">
          <div className="w-1/4 hidden lg:block">
            <ProfileCard />
          </div>
          <div className="lg:w-3/4 w-full lg:ml-7 ml-0">
            <div className="bg-white md:p-7 p-3 rounded-md items-center md:flex hidden justify-around">
              <div className="border-b-4 border-[#C539B4] pb-2">
                <Link
                  to="/Profile"
                  className="leading-8 text-lg text-[#14142B] "
                >
                  Account Setting
                </Link>
              </div>
              <div className="pb-2">
                <Link
                  to="/History"
                  className="leading-8 text-lg text-[#AAAAAA] font-semibold"
                >
                  Order History
                </Link>
              </div>
            </div>
            <Formik
              initialValues={{
                firstName: newFirstName,
                lastName: profile?.lastName,
                email: profile?.email,
                phoneNumber: profile?.phoneNumber,
              }}
              onSubmit={handleUpdateData}
              validationSchema={UpdateDataSchema}
            >
              {({ errors, touched, dirty }) => (
                <Form>
                  <div className="lg:hidden block mt-5">
                    <ProfileCard />
                  </div>
                  <div className="mt-5 bg-white rounded-md p-7">
                    <h1 className="font-semibold text-[#14142B]">
                      Details Information
                    </h1>
                    <div className="border border-3 my-5"></div>
                    <div className="flex md:flex-row flex-col gap-4">
                      <div className="flex flex-col md:w-1/2 w-full">
                        <div className="mb-2.5">First Name</div>
                        <Field
                          type="text"
                          name="firstName"
                          // defaultValue={profile?.firstName}
                          className="p-3 border-2 rounded-md bg-[#FEFCF3] w-full"
                          placeholder="Write your first name"
                        ></Field>
                        {errors.firstName && touched.firstName ? (
                          <div className="text-red-500">{errors.firstName}</div>
                        ) : null}

                        <div className="md:block hidden">
                          <div className="my-2.5 ">E-mail</div>
                          <Field
                            type="email"
                            name="email"
                            // defaultValue={profile?.email}
                            className="p-3 border-2 rounded-md bg-[#FEFCF3] w-full"
                            placeholder="Write your email"
                          ></Field>
                          {errors.email && touched.email ? (
                            <div className="text-red-500">{errors.email}</div>
                          ) : null}
                        </div>
                      </div>
                      <div className="flex flex-col md:w-1/2 w-full">
                        <div className="mb-2.5">Last Name</div>
                        <Field
                          type="text"
                          name="lastName"
                          // defaultValue={profile?.lastName}
                          className="p-3 border-2 rounded-md bg-[#FEFCF3] w-full"
                          placeholder="Write your last name"
                        ></Field>
                        {errors.lastName && touched.lastName ? (
                          <div className="text-red-500">{errors.lastName}</div>
                        ) : null}

                        <div className="md:hidden block">
                          <div className="my-2.5 ">E-mail</div>
                          <Field
                            type="email"
                            name="email"
                            // defaultValue={profile?.email}
                            className="p-3 border-2 rounded-md bg-[#FEFCF3] w-full"
                            placeholder="Write your email"
                          ></Field>
                          {errors.email && touched.email ? (
                            <div className="text-red-500">{errors.email}</div>
                          ) : null}
                        </div>

                        <div className="my-2.5">Phone Number</div>
                        <Field
                          type="text"
                          name="phoneNumber"
                          // defaultValue={profile?.phoneNumber}
                          placeholder="Write your phone number"
                          className="p-3  border-2 rounded-md bg-[#FEFCF3] w-full"
                        ></Field>
                        {errors.phoneNumber && touched.phoneNumber ? (
                          <div className="text-red-500">
                            {errors.phoneNumber}
                          </div>
                        ) : null}
                      </div>
                    </div>
                  </div>
                  <button
                    type="submit"
                    disabled={!dirty}
                    className="md:w-1/4 w-full mt-5 p-4 rounded-lg text-white bg-[#C539B4] btn"
                  >
                    Update Changes
                  </button>
                </Form>
              )}
            </Formik>
            <div>
              {" "}
              <div className="mt-5 bg-white rounded-md p-7">
                <h1 className="font-semibold text-[#14142B]">
                  Details Information
                </h1>
                <div className="border border-3 my-5"></div>
                <div className="flex gap-4">
                  <div className="flex flex-col w-1/2">
                    <div className="mb-2.5">New Password</div>
                    <input
                      type="password"
                      className="p-3 border-2 rounded-md bg-[#FEFCF3] w-full"
                      placeholder="Write your password"
                    ></input>
                  </div>
                  <div className="flex flex-col w-1/2">
                    <div className="mb-2.5">Confirm Password</div>
                    <input
                      type="password"
                      className="p-3 border-2 rounded-md bg-[#FEFCF3] w-full"
                      placeholder="Write your password"
                    ></input>
                  </div>
                </div>
              </div>
              <button className="md:w-1/4 w-full mt-5 p-4 rounded-lg text-white bg-[#C539B4] btn">
                Update Changes
              </button>
            </div>{" "}
          </div>
        </div>
      </div>
      <Footer />
    </>
  );
};

export default ProfilePage;
